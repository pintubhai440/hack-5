{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI({apiKey: process.env.GEMINI_API_KEY})],\n  model: 'googleai/gemini-2.5-pro',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD,EAAE;YAAC,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAAA;KAAG;IACzD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/answer-fitness-queries.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A fitness and health question answering AI agent.\n *\n * - answerFitnessQuery - A function that answers user questions about fitness and health, providing age-appropriate and personalized advice.\n * - AnswerFitnessQueryInput - The input type for the answerFitnessQuery function.\n * - AnswerFitnessQueryOutput - The return type for the answerFitnessQuery function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnswerFitnessQueryInputSchema = z.object({\n  query: z.string().describe('The user question about fitness or health.'),\n  biography: z.string().describe('The user biography including age and fitness goals.'),\n});\nexport type AnswerFitnessQueryInput = z.infer<typeof AnswerFitnessQueryInputSchema>;\n\nconst AnswerFitnessQueryOutputSchema = z.object({\n  answer: z.string().describe('The answer to the user question, personalized based on their biography.'),\n});\nexport type AnswerFitnessQueryOutput = z.infer<typeof AnswerFitnessQueryOutputSchema>;\n\nexport async function answerFitnessQuery(input: AnswerFitnessQueryInput): Promise<AnswerFitnessQueryOutput> {\n  return answerFitnessQueryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'answerFitnessQueryPrompt',\n  input: {schema: AnswerFitnessQueryInputSchema},\n  output: {schema: AnswerFitnessQueryOutputSchema},\n  prompt: `You are a friendly and encouraging AI fitness and health expert. Your goal is to have a natural conversation with the user, providing expert, age-appropriate, and personalized advice based on their biography. Be conversational and supportive.\n\nUser Biography: {{{biography}}}\n\nUser's Question: {{{query}}}\n\nYour Conversational Answer:`,\n});\n\nconst answerFitnessQueryFlow = ai.defineFlow(\n  {\n    name: 'answerFitnessQueryFlow',\n    inputSchema: AnswerFitnessQueryInputSchema,\n    outputSchema: AnswerFitnessQueryOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,gCAAgC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC7C,OAAO,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;IAC3B,WAAW,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AACjC;AAGA,MAAM,iCAAiC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAC9C,QAAQ,uIAAA,CAAA,IAAC,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC9B;AAGO,eAAe,mBAAmB,KAA8B;IACrE,OAAO,uBAAuB;AAChC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAA6B;IAC7C,QAAQ;QAAC,QAAQ;IAA8B;IAC/C,QAAQ,CAAC;;;;;;2BAMgB,CAAC;AAC5B;AAEA,MAAM,yBAAyB,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC1C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IA1BoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 358, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/chatbot/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {answerFitnessQuery as '40510b5a2b782d670a4f60882598c4a0a22748777d'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 416, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/chatbot/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/chatbot/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/chatbot/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAkS,GAC/T,gEACA","debugId":null}},
    {"offset": {"line": 430, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/chatbot/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/chatbot/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/chatbot/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA8Q,GAC3S,4CACA","debugId":null}},
    {"offset": {"line": 444, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}