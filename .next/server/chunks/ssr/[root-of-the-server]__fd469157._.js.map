{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 271, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/genkit.ts"],"sourcesContent":["import {genkit} from 'genkit';\nimport {googleAI} from '@genkit-ai/google-genai';\n\nexport const ai = genkit({\n  plugins: [googleAI({apiKey: process.env.GEMINI_API_KEY})],\n  model: 'googleai/gemini-2.5-pro',\n});\n"],"names":[],"mappings":";;;AAAA;AAAA;AACA;AAAA;;;AAEO,MAAM,KAAK,CAAA,GAAA,uIAAA,CAAA,SAAM,AAAD,EAAE;IACvB,SAAS;QAAC,CAAA,GAAA,6KAAA,CAAA,WAAQ,AAAD,EAAE;YAAC,QAAQ,QAAQ,GAAG,CAAC,cAAc;QAAA;KAAG;IACzD,OAAO;AACT","debugId":null}},
    {"offset": {"line": 294, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-relevant-videos.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview Suggests relevant exercise videos from external platforms based on the user's profile and goals.\n *\n * - suggestRelevantVideos - A function that suggests relevant exercise videos.\n * - SuggestRelevantVideosInput - The input type for the suggestRelevantVideos function.\n * - SuggestRelevantVideosOutput - The return type for the suggestRelevantVideos function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestRelevantVideosInputSchema = z.object({\n  userProfile: z\n    .string()\n    .describe('A detailed description of the user profile, including age, gender, fitness level, and any health conditions.'),\n  fitnessGoals: z\n    .string()\n    .describe('The user fitness goals, such as weight loss, muscle gain, or improved endurance.'),\n});\nexport type SuggestRelevantVideosInput = z.infer<typeof SuggestRelevantVideosInputSchema>;\n\nconst SuggestRelevantVideosOutputSchema = z.object({\n  videoSuggestions: z\n    .array(z.string())\n    .describe('A list of relevant exercise video URLs from external platforms.'),\n});\nexport type SuggestRelevantVideosOutput = z.infer<typeof SuggestRelevantVideosOutputSchema>;\n\nexport async function suggestRelevantVideos(\n  input: SuggestRelevantVideosInput\n): Promise<SuggestRelevantVideosOutput> {\n  return suggestRelevantVideosFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'suggestRelevantVideosPrompt',\n  input: {schema: SuggestRelevantVideosInputSchema},\n  output: {schema: SuggestRelevantVideosOutputSchema},\n  prompt: `You are an AI fitness assistant. Your task is to recommend relevant and valid YouTube videos based on a user's profile and fitness goals.\n\nUser Profile: {{{userProfile}}}\nFitness Goals: {{{fitnessGoals}}}\n\nPlease provide a list of exactly 3 valid and relevant YouTube video URLs. You must verify that each URL leads to a real, active video on YouTube. Do not invent or hallucinate any URLs. The format must be 'https://www.youtube.com/watch?v=VIDEO_ID'.\n`,\n  config: {\n    safetySettings: [\n      {\n        category: 'HARM_CATEGORY_DANGEROUS_CONTENT',\n        threshold: 'BLOCK_NONE',\n      },\n    ],\n  },\n});\n\nconst suggestRelevantVideosFlow = ai.defineFlow(\n  {\n    name: 'suggestRelevantVideosFlow',\n    inputSchema: SuggestRelevantVideosInputSchema,\n    outputSchema: SuggestRelevantVideosOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;AAEA;;;;;;CAMC,GAED;AACA;AAAA;;;;;;AAEA,MAAM,mCAAmC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IAChD,aAAa,uIAAA,CAAA,IAAC,CACX,MAAM,GACN,QAAQ,CAAC;IACZ,cAAc,uIAAA,CAAA,IAAC,CACZ,MAAM,GACN,QAAQ,CAAC;AACd;AAGA,MAAM,oCAAoC,uIAAA,CAAA,IAAC,CAAC,MAAM,CAAC;IACjD,kBAAkB,uIAAA,CAAA,IAAC,CAChB,KAAK,CAAC,uIAAA,CAAA,IAAC,CAAC,MAAM,IACd,QAAQ,CAAC;AACd;AAGO,eAAe,sBACpB,KAAiC;IAEjC,OAAO,0BAA0B;AACnC;AAEA,MAAM,SAAS,mHAAA,CAAA,KAAE,CAAC,YAAY,CAAC;IAC7B,MAAM;IACN,OAAO;QAAC,QAAQ;IAAgC;IAChD,QAAQ;QAAC,QAAQ;IAAiC;IAClD,QAAQ,CAAC;;;;;;AAMX,CAAC;IACC,QAAQ;QACN,gBAAgB;YACd;gBACE,UAAU;gBACV,WAAW;YACb;SACD;IACH;AACF;AAEA,MAAM,4BAA4B,mHAAA,CAAA,KAAE,CAAC,UAAU,CAC7C;IACE,MAAM;IACN,aAAa;IACb,cAAc;AAChB,GACA,OAAM;IACJ,MAAM,EAAC,MAAM,EAAC,GAAG,MAAM,OAAO;IAC9B,OAAO;AACT;;;IApCoB;;AAAA,+OAAA","debugId":null}},
    {"offset": {"line": 366, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/.next-internal/server/app/%28app%29/recommendations/page/actions.js%20%28server%20actions%20loader%29"],"sourcesContent":["export {suggestRelevantVideos as '40b3f1d509dd253b02d266d7468209dbe8663769a3'} from 'ACTIONS_MODULE0'\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 424, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/recommendations/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/recommendations/page.tsx <module evaluation> from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/recommendations/page.tsx <module evaluation>\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAA0S,GACvU,wEACA","debugId":null}},
    {"offset": {"line": 438, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/recommendations/page.tsx/proxy.mjs"],"sourcesContent":["import { registerClientReference } from \"react-server-dom-turbopack/server.edge\";\nexport default registerClientReference(\n    function() { throw new Error(\"Attempted to call the default export of [project]/src/app/(app)/recommendations/page.tsx from the server, but it's on the client. It's not possible to invoke a client function from the server, it can only be rendered as a Component or passed to props of a Client Component.\"); },\n    \"[project]/src/app/(app)/recommendations/page.tsx\",\n    \"default\",\n);\n"],"names":[],"mappings":";;;AAAA;;uCACe,CAAA,GAAA,qPAAA,CAAA,0BAAuB,AAAD,EACjC;IAAa,MAAM,IAAI,MAAM;AAAsR,GACnT,oDACA","debugId":null}},
    {"offset": {"line": 452, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}}]
}