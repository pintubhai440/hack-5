{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/answer-fitness-queries.ts"],"sourcesContent":["'use server';\n\n/**\n * @fileOverview A fitness and health question answering AI agent.\n *\n * - answerFitnessQuery - A function that answers user questions about fitness and health, providing age-appropriate and personalized advice.\n * - AnswerFitnessQueryInput - The input type for the answerFitnessQuery function.\n * - AnswerFitnessQueryOutput - The return type for the answerFitnessQuery function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst AnswerFitnessQueryInputSchema = z.object({\n  query: z.string().describe('The user question about fitness or health.'),\n  biography: z.string().describe('The user biography including age and fitness goals.'),\n});\nexport type AnswerFitnessQueryInput = z.infer<typeof AnswerFitnessQueryInputSchema>;\n\nconst AnswerFitnessQueryOutputSchema = z.object({\n  answer: z.string().describe('The answer to the user question, personalized based on their biography.'),\n});\nexport type AnswerFitnessQueryOutput = z.infer<typeof AnswerFitnessQueryOutputSchema>;\n\nexport async function answerFitnessQuery(input: AnswerFitnessQueryInput): Promise<AnswerFitnessQueryOutput> {\n  return answerFitnessQueryFlow(input);\n}\n\nconst prompt = ai.definePrompt({\n  name: 'answerFitnessQueryPrompt',\n  input: {schema: AnswerFitnessQueryInputSchema},\n  output: {schema: AnswerFitnessQueryOutputSchema},\n  prompt: `You are a friendly and encouraging AI fitness and health expert. Your goal is to have a natural conversation with the user, providing expert, age-appropriate, and personalized advice based on their biography. Be conversational and supportive.\n\nUser Biography: {{{biography}}}\n\nUser's Question: {{{query}}}\n\nYour Conversational Answer:`,\n});\n\nconst answerFitnessQueryFlow = ai.defineFlow(\n  {\n    name: 'answerFitnessQueryFlow',\n    inputSchema: AnswerFitnessQueryInputSchema,\n    outputSchema: AnswerFitnessQueryOutputSchema,\n  },\n  async input => {\n    const {output} = await prompt(input);\n    return output!;\n  }\n);\n"],"names":[],"mappings":";;;;;;IAwBsB,qBAAA,WAAA,GAAA,CAAA,GAAA,yNAAA,CAAA,wBAAA,EAAA,8CAAA,yNAAA,CAAA,aAAA,EAAA,KAAA,GAAA,yNAAA,CAAA,mBAAA,EAAA","debugId":null}},
    {"offset": {"line": 23, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 280, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/scroll-area.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as ScrollAreaPrimitive from \"@radix-ui/react-scroll-area\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst ScrollArea = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.Root>\n>(({ className, children, ...props }, ref) => (\n  <ScrollAreaPrimitive.Root\n    ref={ref}\n    className={cn(\"relative overflow-hidden\", className)}\n    {...props}\n  >\n    <ScrollAreaPrimitive.Viewport className=\"h-full w-full rounded-[inherit]\">\n      {children}\n    </ScrollAreaPrimitive.Viewport>\n    <ScrollBar />\n    <ScrollAreaPrimitive.Corner />\n  </ScrollAreaPrimitive.Root>\n))\nScrollArea.displayName = ScrollAreaPrimitive.Root.displayName\n\nconst ScrollBar = React.forwardRef<\n  React.ElementRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>,\n  React.ComponentPropsWithoutRef<typeof ScrollAreaPrimitive.ScrollAreaScrollbar>\n>(({ className, orientation = \"vertical\", ...props }, ref) => (\n  <ScrollAreaPrimitive.ScrollAreaScrollbar\n    ref={ref}\n    orientation={orientation}\n    className={cn(\n      \"flex touch-none select-none transition-colors\",\n      orientation === \"vertical\" &&\n        \"h-full w-2.5 border-l border-l-transparent p-[1px]\",\n      orientation === \"horizontal\" &&\n        \"h-2.5 flex-col border-t border-t-transparent p-[1px]\",\n      className\n    )}\n    {...props}\n  >\n    <ScrollAreaPrimitive.ScrollAreaThumb className=\"relative flex-1 rounded-full bg-border\" />\n  </ScrollAreaPrimitive.ScrollAreaScrollbar>\n))\nScrollBar.displayName = ScrollAreaPrimitive.ScrollAreaScrollbar.displayName\n\nexport { ScrollArea, ScrollBar }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AAEA;AALA;;;;;AAOA,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAGhC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC,6KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,4BAA4B;QACzC,GAAG,KAAK;;0BAET,6LAAC,6KAAA,CAAA,WAA4B;gBAAC,WAAU;0BACrC;;;;;;0BAEH,6LAAC;;;;;0BACD,6LAAC,6KAAA,CAAA,SAA0B;;;;;;;;;;;;AAG/B,WAAW,WAAW,GAAG,6KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,cAAc,UAAU,EAAE,GAAG,OAAO,EAAE,oBACpD,6LAAC,6KAAA,CAAA,sBAAuC;QACtC,KAAK;QACL,aAAa;QACb,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iDACA,gBAAgB,cACd,sDACF,gBAAgB,gBACd,wDACF;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,6KAAA,CAAA,kBAAmC;YAAC,WAAU;;;;;;;;;;;MAjB7C;AAoBN,UAAU,WAAW,GAAG,6KAAA,CAAA,sBAAuC,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 357, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 460, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/%28app%29/chatbot/page.tsx"],"sourcesContent":["'use client';\n\nimport { useState, useTransition, useRef, useEffect } from 'react';\nimport { z } from 'zod';\nimport { useForm } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { answerFitnessQuery } from '@/ai/flows/answer-fitness-queries';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Textarea } from '@/components/ui/textarea';\nimport { Form, FormControl, FormField, FormItem } from '@/components/ui/form';\nimport { useToast } from '@/hooks/use-toast';\nimport { Send, User, Bot, Loader2 } from 'lucide-react';\nimport { ScrollArea } from '@/components/ui/scroll-area';\nimport { Avatar, AvatarFallback, AvatarImage } from '@/components/ui/avatar';\nimport { cn } from '@/lib/utils';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\n\nconst formSchema = z.object({\n  query: z.string().min(1, 'Message cannot be empty.'),\n});\n\ntype Message = {\n  role: 'user' | 'assistant';\n  content: string;\n};\n\nexport default function ChatbotPage() {\n  const [messages, setMessages] = useState<Message[]>([\n    {\n      role: 'assistant',\n      content: \"Hello! I'm your AI Fitness expert. Ask me anything about workouts, nutrition, or your health goals.\",\n    }\n  ]);\n  const [biography] = useState<string>('30-year-old male, 80kg, moderately active. Goal: build muscle.');\n  const [isPending, startTransition] = useTransition();\n  const { toast } = useToast();\n  const scrollAreaRef = useRef<HTMLDivElement>(null);\n\n  const form = useForm<z.infer<typeof formSchema>>({\n    resolver: zodResolver(formSchema),\n    defaultValues: { query: '' },\n  });\n\n  useEffect(() => {\n    if (scrollAreaRef.current) {\n      scrollAreaRef.current.scrollTo({\n        top: scrollAreaRef.current.scrollHeight,\n        behavior: 'smooth',\n      });\n    }\n  }, [messages, isPending]);\n\n  function onSubmit(values: z.infer<typeof formSchema>) {\n    const userMessage: Message = { role: 'user', content: values.query };\n    setMessages((prev) => [...prev, userMessage]);\n    form.reset();\n\n    startTransition(async () => {\n      try {\n        const result = await answerFitnessQuery({\n          query: values.query,\n          biography,\n        });\n        const assistantMessage: Message = { role: 'assistant', content: result.answer };\n        setMessages((prev) => [...prev, assistantMessage]);\n      } catch (error) {\n        console.error('Failed to get answer:', error);\n        toast({\n          variant: 'destructive',\n          title: 'Error',\n          description: 'Could not get a response. Please try again.',\n        });\n        setMessages((prev) => prev.slice(0, -1));\n      }\n    });\n  }\n\n  return (\n    <div className=\"h-[calc(100vh-9rem)] flex flex-col\">\n      <Card className=\"flex-1 flex flex-col\">\n        <CardHeader>\n          <CardTitle>AI Fitness Chatbot</CardTitle>\n          <CardDescription>\n            Ask me anything about fitness and health. I'm using this biography for context: <em className=\"text-foreground\">{biography}</em>\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"flex-1 flex flex-col\">\n          <ScrollArea className=\"flex-1 pr-4\" ref={scrollAreaRef}>\n            <div className=\"space-y-6\">\n              {messages.map((message, index) => (\n                <div\n                  key={index}\n                  className={cn(\n                    'flex items-start gap-3',\n                    message.role === 'user' ? 'justify-end' : 'justify-start'\n                  )}\n                >\n                  {message.role === 'assistant' && (\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarFallback>\n                        <Bot />\n                      </AvatarFallback>\n                    </Avatar>\n                  )}\n                  <div\n                    className={cn(\n                      'max-w-md rounded-lg p-3 text-sm',\n                      message.role === 'user'\n                        ? 'bg-primary text-primary-foreground'\n                        : 'bg-muted'\n                    )}\n                  >\n                    <p className=\"whitespace-pre-wrap font-code\">{message.content}</p>\n                  </div>\n                  {message.role === 'user' && (\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarFallback>\n                        <User />\n                      </AvatarFallback>\n                    </Avatar>\n                  )}\n                </div>\n              ))}\n              {isPending && (\n                 <div className='flex items-start gap-3 justify-start'>\n                    <Avatar className=\"h-8 w-8\">\n                      <AvatarFallback>\n                        <Bot />\n                      </AvatarFallback>\n                    </Avatar>\n                    <div className='bg-muted rounded-lg p-3 flex items-center gap-2'>\n                        <Loader2 className=\"h-4 w-4 animate-spin\"/>\n                        <span className=\"text-sm text-muted-foreground\">Thinking...</span>\n                    </div>\n                 </div>\n              )}\n            </div>\n          </ScrollArea>\n          <Form {...form}>\n            <form\n              onSubmit={form.handleSubmit(onSubmit)}\n              className=\"mt-4 flex items-center gap-2\"\n            >\n              <FormField\n                control={form.control}\n                name=\"query\"\n                render={({ field }) => (\n                  <FormItem className=\"flex-1\">\n                    <FormControl>\n                      <Input\n                        placeholder=\"e.g., How can I improve my bench press?\"\n                        autoComplete=\"off\"\n                        {...field}\n                      />\n                    </FormControl>\n                  </FormItem>\n                )}\n              />\n              <Button type=\"submit\" disabled={isPending} size=\"icon\" className=\"shrink-0\">\n                <Send className=\"h-4 w-4\" />\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}